# azure-pipelines-ci-cd.yml
trigger:
  branches:
    include:
      - develop
      - main
  tags:
    include:
      - 'v*'     # Only trigger prod when tagged (v1.0.0, v2.1.3, etc.)

variables:
  buildConfiguration: 'Release'
  dotNetFramework: 'net9.0'
  dotNetVersion: '9.0.x'

stages:
# ----------------- BUILD -----------------
- stage: Build
  displayName: "Build & Publish Artifact"
  jobs:
  - job: BuildJob
    displayName: 'Build .NET Application'
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - task: UseDotNet@2
      displayName: 'Use .NET $(dotNetVersion)'
      inputs:
        packageType: 'sdk'
        version: '$(dotNetVersion)'
        
    - task: DotNetCoreCLI@2
      displayName: 'Restore packages'
      inputs:
        command: 'restore'
        projects: '**/*.csproj'
        
    - task: DotNetCoreCLI@2
      displayName: 'Build application'
      inputs:
        command: 'build'
        projects: '**/*.csproj'
        arguments: '--configuration $(buildConfiguration) --no-restore'
        
    - task: DotNetCoreCLI@2
      displayName: 'Run tests'
      inputs:
        command: 'test'
        projects: '**/*Tests*.csproj'
        arguments: '--configuration $(buildConfiguration) --no-build --collect:"XPlat Code Coverage"'
      continueOnError: true
        
    - task: DotNetCoreCLI@2
      displayName: 'Publish application'
      inputs:
        command: 'publish'
        projects: '**/Azure.CiCd.csproj'
        arguments: '--configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory) --no-build'
        publishWebProjects: false
        zipAfterPublish: true
        
    - task: PublishBuildArtifacts@1
      displayName: 'Publish build artifacts'
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'drop'
        publishLocation: 'Container'

# ----------------- DEV -----------------
- stage: Dev
  displayName: "Deploy to Dev"
  dependsOn: Build
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/develop'))
  jobs:
  - deployment: DeployDev
    displayName: 'Deploy to Dev Environment'
    pool:
      vmImage: 'ubuntu-latest'
    environment: 'dev'
    strategy:
      runOnce:
        deploy:
          steps:
          - download: current
            artifact: drop
            displayName: 'Download build artifacts'
          
          - task: AzureWebApp@1
            displayName: 'Deploy to Azure Web App - Dev'
            inputs:
              azureSubscription: '$(azureServiceConnection)'
              appType: 'webApp'
              appName: '$(webAppNameDev)'
              package: '$(Pipeline.Workspace)/drop/*.zip'
              deploymentMethod: 'auto'

# ----------------- QA -----------------
- stage: QA
  displayName: "Deploy to QA"
  dependsOn: Build
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/main'))
  jobs:
  - deployment: DeployQA
    displayName: 'Deploy to QA Environment'
    pool:
      vmImage: 'ubuntu-latest'
    environment: 'qa'
    strategy:
      runOnce:
        deploy:
          steps:
          - download: current
            artifact: drop
            displayName: 'Download build artifacts'
          
          - task: AzureWebApp@1
            displayName: 'Deploy to Azure Web App - QA'
            inputs:
              azureSubscription: '$(azureServiceConnection)'
              appType: 'webApp'
              appName: '$(webAppNameQA)'
              package: '$(Pipeline.Workspace)/drop/*.zip'
              deploymentMethod: 'auto'

# ----------------- UAT -----------------
- stage: UAT
  displayName: "Deploy to UAT"
  dependsOn: QA
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/main'))
  jobs:
  - deployment: DeployUAT
    displayName: 'Deploy to UAT Environment'
    pool:
      vmImage: 'ubuntu-latest'
    environment: 'uat'
    strategy:
      runOnce:
        deploy:
          steps:
          - download: current
            artifact: drop
            displayName: 'Download build artifacts'
          
          - task: AzureWebApp@1
            displayName: 'Deploy to Azure Web App - UAT'
            inputs:
              azureSubscription: '$(azureServiceConnection)'
              appType: 'webApp'
              appName: '$(webAppNameUAT)'
              package: '$(Pipeline.Workspace)/drop/*.zip'
              deploymentMethod: 'auto'

# ----------------- PROD -----------------
- stage: Prod
  displayName: "Deploy to PROD"
  dependsOn: Build
  condition: and(succeeded(), startsWith(variables['Build.SourceBranch'], 'refs/tags/v'))
  jobs:
  - deployment: DeployProd
    displayName: 'Deploy to Production Environment'
    pool:
      vmImage: 'ubuntu-latest'
    environment: 'prod'
    strategy:
      runOnce:
        deploy:
          steps:
          - download: current
            artifact: drop
            displayName: 'Download build artifacts'
          
          - task: AzureWebApp@1
            displayName: 'Deploy to Azure Web App - Production'
            inputs:
              azureSubscription: '$(azureServiceConnection)'
              appType: 'webApp'
              appName: '$(webAppNameProd)'
              package: '$(Pipeline.Workspace)/drop/*.zip'
              deploymentMethod: 'auto'
